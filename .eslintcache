[{"C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\index.js":"1","C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\App.js":"2","C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\reportWebVitals.js":"3","C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\Redux\\store.js":"4","C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\Redux\\weatherCitySlice.js":"5","C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\components\\WeatherCityNowCopy\\WeatherCityNow.jsx":"6","C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\components\\UI\\index.js":"7","C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\api\\weatherApi.js":"8","C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\components\\UI\\Search\\index.jsx":"9"},{"size":652,"mtime":1613586777756,"results":"10","hashOfConfig":"11"},{"size":3298,"mtime":1613586777741,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1613586777756,"results":"13","hashOfConfig":"11"},{"size":509,"mtime":1613586777742,"results":"14","hashOfConfig":"11"},{"size":1595,"mtime":1613586777742,"results":"15","hashOfConfig":"11"},{"size":5417,"mtime":1613586777749,"results":"16","hashOfConfig":"11"},{"size":72,"mtime":1613586777745,"results":"17","hashOfConfig":"11"},{"size":459,"mtime":1613586777743,"results":"18","hashOfConfig":"11"},{"size":2456,"mtime":1613586777745,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"u4nkjr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\index.js",[],["42","43"],"C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\App.js",["44","45"],"import React, {useEffect} from 'react'\r\nimport style from './app.module.css';\r\nimport './App.css'\r\nimport {UI} from  './components/UI'\r\n// import WeatherCityNow from \"./components/WeatherCityNow/WeatherCityNow\";\r\nimport icon from \"./image/IconWeather/04n.png\";\r\nimport {getWeatherInCity} from \"./Redux/weatherCitySlice\";\r\nimport {connect, useDispatch} from \"react-redux\";\r\nimport WeatherCityNowCopy from \"./components/WeatherCityNowCopy/WeatherCityNow\";\r\n\r\n\r\nconst {Search} =UI\r\n\r\nconst App = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect( () => {\r\n       if(props.lat && props.lon) {\r\n            dispatch(getWeatherInCity([props.lat, props.lon]));\r\n        }\r\n    }, [props.lat,props.lon])\r\n\r\n    return (\r\n        <div className='background_image'>\r\n            <div className='background_shadow'>\r\n                <div className=\"App\">\r\n                    <Search className='Search--layout'/>\r\n                    <div className='wrapper_content'>\r\n                        {props.pending ? <h1>22222</h1> : <WeatherCityNowCopy/>}\r\n                        <div className=\"weather-day\">\r\n                            <div className=\"item\">\r\n                                <p className='item__time'>28 Nov</p>\r\n                                <div><img src={icon} alt=\"Icon\"/></div>\r\n                                <p className='item__temperature'>+2.3°</p>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                                <p className='item__time'>29 Nov</p>\r\n                                <div><img src={icon} alt=\"Icon\"/></div>\r\n                                <p className='item__temperature'>+2.3°</p>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                                <p className='item__time'>30 Nov</p>\r\n                                <div><img src={icon} alt=\"Icon\"/></div>\r\n                                <p className='item__temperature'>+2.3°</p>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                                <p className='item__time'>1 Dev</p>\r\n                                <div><img src={icon} alt=\"Icon\"/></div>\r\n                                <p className='item__temperature'>+2.3°</p>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                                <p className='item__time'>2 Dev</p>\r\n                                <div><img src={icon} alt=\"Icon\"/></div>\r\n                                <p className='item__temperature'>+2.3°</p>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                                <p className='item__time'>3 Dev</p>\r\n                                <div><img src={icon} alt=\"Icon\"/></div>\r\n                                <p className='item__temperature'>+2.3°</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mstp = (store) => ({\r\n    lon: store.rootReducer.city.lon,\r\n    lat: store.rootReducer.city.lat,\r\n    pending: store.rootReducer.city.pending,\r\n})\r\nexport default connect(mstp,{getWeatherInCity})(App);\r\n","C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\reportWebVitals.js",[],"C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\Redux\\store.js",[],"C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\Redux\\weatherCitySlice.js",[],"C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\components\\WeatherCityNowCopy\\WeatherCityNow.jsx",["46","47"],"import React, {useEffect, useState} from 'react';\r\nimport './WeatherCityNow.css';\r\nimport cn from 'classnames'\r\nimport iconDefault from '../../image/IconWeather/04n.png'\r\nimport iconWind from '../../image/wind.png'\r\nimport iconHumidity from '../../image/humidity.png'\r\nimport iconPressure from '../../image/pressure.png'\r\nimport {connect} from \"react-redux\";\r\n\r\nconst WeatherCityNowCopy = (props) => {\r\n    const [icon ,setIcon] = useState('')\r\n    useEffect(() => {\r\n        import (`../../image/IconWeather/${props.iconCode}.png`).then((icon) => setIcon(icon.default) )\r\n    }, [props.iconCode])\r\n\r\n\r\n    return props.pending ? <h1>111111</h1> :(\r\n        <div className='weather-toDay'> \r\n        <div className='weather-toDay__block-now'>\r\n            <div className='wrapper-sity-date'>\r\n                <div className='wrapper-sity-date__name-sity'>{props.city}</div>\r\n                {/*<div className='wrapper-sity-date__today-date'>{props.date}</div>*/}\r\n            </div>\r\n            <div className=\"weather-now\">\r\n                <div className=\"weather-now__temperature\">\r\n                    <p>{props.temp}°</p>\r\n                    <div className=\"wrapperImg\"><img src={icon} alt=\"Icon\"/></div>\r\n                </div>\r\n                <div className=\"weather-now__description\">\r\n                    <p>{props.description}</p>\r\n                </div>\r\n                <div className=\"weather-now__feelsLike\"><p>ощущается как {props.feelsLike}°</p></div>\r\n                <div className=\"weather-now__wind-humidity-pressure\">\r\n                    <div className=\"weather-now__wind\">\r\n                        <img src={iconWind} alt=\"Icon\"/>\r\n                        <p>{props.windSpeed} м/с, ЮЗ</p>\r\n                    </div>\r\n                    <div className=\"weather-now__humidity\">\r\n                        <img src={iconHumidity} alt=\"Icon\"/>\r\n                        <p>{props.humidity}%</p>\r\n                    </div>\r\n                    <div className=\"weather-now__pressure\">\r\n                        <img src={iconPressure} alt=\"Icon\"/>\r\n                        <p>{props.pressure} мм</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            <div className=\"weather-hourly\">\r\n                <div className=\"item\">\r\n                    <p className='item__time'>00:00</p>\r\n                    <div className=\"wrapperImg\"><img src={icon} alt=\"Icon\"/></div>\r\n                    <p className='item__temperature'>+2.3°</p>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <p className='item__time'>00:00</p>\r\n                    <div className=\"wrapperImg\"><img src={icon} alt=\"Icon\"/></div>\r\n                    <p className='item__temperature'>+2.3°</p>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <p className='item__time'>00:00</p>\r\n                    <div className=\"wrapperImg\"><img src={icon} alt=\"Icon\"/></div>\r\n                    <p className='item__temperature'>+2.3°</p>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <p className='item__time'>00:00</p>\r\n                    <div className=\"wrapperImg\"><img src={icon} alt=\"Icon\"/></div>\r\n                    <p className='item__temperature'>+2.3°</p>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <p className='item__time'>00:00</p>\r\n                    <div className=\"wrapperImg\"><img src={icon} alt=\"Icon\"/></div>\r\n                    <p className='item__temperature'>+2.3°</p>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <p className='item__time'>00:00</p>\r\n                    <div className=\"wrapperImg\"><img src={icon} alt=\"Icon\"/></div>\r\n                    <p className='item__temperature'>+2.3°</p>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <p className='item__time'>00:00</p>\r\n                    <div className=\"wrapperImg\"><img src={icon} alt=\"Icon\"/></div>\r\n                    <p className='item__temperature'>+2.3°</p>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <p className='item__time'>00:00</p>\r\n                    <div className=\"wrapperImg\"><img src={icon} alt=\"Icon\"/></div>\r\n                    <p className='item__temperature'>+2.3°</p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst getDate = (store) => {\r\n    const dt = store.rootReducer.city.data.current.dt\r\n    const currentDate =  new Date(+(dt + '000')).toLocaleString('ru', {\r\n        month: 'short',\r\n        day: 'numeric'\r\n    })\r\n    return currentDate\r\n}\r\nconst round = (number) => {\r\n    return Math.round(number)\r\n}\r\nconst mstp = (store) => ({\r\n    city: store.rootReducer.city.value,\r\n    date: getDate(store),\r\n    temp: round(store.rootReducer.city.data.current.temp),\r\n    feelsLike: round(store.rootReducer.city.data.current.feels_like),\r\n    humidity: store.rootReducer.city.data.current.humidity,\r\n    windSpeed: round(store.rootReducer.city.data.current.wind_speed),\r\n    pressure: store.rootReducer.city.data.current.pressure,\r\n    description: store.rootReducer.city.data.current.weather[0].description,\r\n    iconCode: store.rootReducer.city.data.current.weather[0].icon,\r\n})\r\nexport default connect(mstp,{})(WeatherCityNowCopy);\r\n\r\n","C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\components\\UI\\index.js",[],"C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\api\\weatherApi.js",[],"C:\\Users\\Onskate\\Weather_react\\waether-react\\src\\components\\UI\\Search\\index.jsx",["48","49"],"import React, {useEffect, useState} from \"react\";\r\nimport './Search.css';\r\nimport cn from 'classnames'\r\nimport ReactDadataBox from \"react-dadata-box\";\r\nimport {choose, getWeatherInCity} from \"../../../Redux/weatherCitySlice\";\r\nimport {connect, useDispatch} from \"react-redux\";\r\n\r\n\r\nexport function Search(props) {\r\n\r\n    const [suggestionOpen, setSuggestionOpen] = useState(\"\")\r\n\r\n    const {className, isDarkMode,    ...input} = props;\r\n    const token = '9e301eb40c65b7139ac2be7fec19e0d4bdc53eac'\r\n\r\n    const query = {\r\n        locations: [{\"country\": \"*\"}],\r\n        from_bound: {value: \"city\"},\r\n        restrict_value: false,\r\n        to_bound: {value: \"settlement\"}\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (<ReactDadataBox payloadModifier={query} token={token}\r\n                            className={cn({\r\n                                \"Search\": true,\r\n                                \"Search--darkMode\": isDarkMode,\r\n                                \"Search--disabled\": props.disabled,\r\n                                // \"SuggestionOpen\" : suggestionOpen,\r\n                            }, className)}\r\n                            placeholder='Search...'\r\n                            onChange={(e) => {\r\n                                setSuggestionOpen('')\r\n                                dispatch(choose(e))\r\n                            }}\r\n                            customStyles={{\r\n                                'react-dadata__suggestion': 'custom-suggestion',\r\n                                'react-dadata__suggestions': 'position-suggestions'\r\n                            }}\r\n                            customInput={({onChange, value}) => (\r\n                                <input\r\n                                    autoComplete=\"off\"\r\n                                    className={'Search__input'}\r\n                                    type=\"search\"\r\n                                    onChange={e => {\r\n                                        setSuggestionOpen(e.target.value)\r\n                                        onChange(e)\r\n                                    }}\r\n                                    placeholder='Search...'\r\n                                    value={suggestionOpen}\r\n                                    {...input}\r\n                                />\r\n                            )}\r\n                            showNote={false}/>\r\n\r\n    )\r\n}\r\nexport default connect(null, {})(Search)\r\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":21,"column":8,"nodeType":"60","endLine":21,"endColumn":29,"suggestions":"61"},{"ruleId":"54","severity":1,"message":"62","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":10},{"ruleId":"54","severity":1,"message":"63","line":4,"column":8,"nodeType":"56","messageId":"57","endLine":4,"endColumn":19},{"ruleId":"54","severity":1,"message":"64","line":1,"column":16,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"65","line":5,"column":17,"nodeType":"56","messageId":"57","endLine":5,"endColumn":33},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'style' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["68"],"'cn' is defined but never used.","'iconDefault' is defined but never used.","'useEffect' is defined but never used.","'getWeatherInCity' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [dispatch, props.lat, props.lon]",{"range":"71","text":"72"},[689,710],"[dispatch, props.lat, props.lon]"]